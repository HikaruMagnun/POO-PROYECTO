package QR;


import com.google.zxing.BarcodeFormat;
import com.google.zxing.WriterException;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.sql.SQLException;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author HP
 */




public class QR_VIEW extends javax.swing.JFrame {
    
    private int temp_actualizar_seg=10;
    private String Aula ="A0308";
    Conection_database bd = new Conection_database();
    private int xMouse, yMouse;
        
    /**
     * Creates new form QR_VIEWER
     */
    public QR_VIEW() {
        initComponents();
        this.getContentPane().setBackground(Color.BLACK);
    }

    
    
    public void GENERADOR() throws InterruptedException, SQLException{
        Random random = new Random();
        int size = 1000;
        //tipo
        String FileType = "png";
        while (true) {
            try {
                //lee el aula y el seg_Actu del txt
                BufferedReader reader = new BufferedReader(new FileReader("AulaSeg.txt"));
                String au = reader.readLine();
                setAula(au);
                int seg = Integer.parseInt(reader.readLine());
                setTemp_actualizar_seg(seg);
                // Cierra el archivo
                reader.close();
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null,"ARCHIVO AulaSeg.txt");
            }
            //obetenemos el qr de la base de datos
            String codigo = String.valueOf(bd.Obtener_QRcode_de_Aula(Aula));
            //ruta de archivo
            

            //GENERACION
            QRCodeWriter qrcode = new QRCodeWriter();
            try {
                BitMatrix matrix = qrcode.encode(codigo, BarcodeFormat.QR_CODE, size, size);
                File f = new File( codigo + "." + FileType);
                int matrixWidth = matrix.getWidth();
                BufferedImage image = new BufferedImage(matrixWidth, matrixWidth, BufferedImage.TYPE_INT_RGB);
                image.createGraphics();

                Graphics2D gd = (Graphics2D) image.getGraphics();
                gd.setColor(Color.white); // Fondo
                gd.fillRect(0, 0, size, size);
                gd.setColor(Color.black); // Qr

                for (int b = 0; b < matrixWidth; b++) {
                    for (int j = 0; j < matrixWidth; j++) {
                        if (matrix.get(b, j)) {
                            gd.fillRect(b, j, 1, 1);
                        }
                    }
                }

                // Mostrar la imagen generada
                ImageIO.write(image, FileType, f);
                Image mImagen = new ImageIcon(codigo + "." + FileType).getImage();
                ImageIcon mIcono = new ImageIcon(mImagen.getScaledInstance(QR_CONTENER.getWidth(), QR_CONTENER.getHeight(), 0));
                QR_CONTENER.setIcon(mIcono);
                f.delete();

            }catch (WriterException | IOException E) {
                System.out.println(E);
            }
            TimeUnit.SECONDS.sleep(this.temp_actualizar_seg);
            //generacion del numero aleatorio y actualizacio en la db
            int code = random.nextInt((2147483646 - 1)+ 1)  ;
            bd.actualizar_qr_code(Aula, code);
            
        }
        
        
    }

    public void setTemp_actualizar_seg(int temp_actualizar_seg) {
        this.temp_actualizar_seg = temp_actualizar_seg;
    }

    public void setAula(String Aula) {
        this.Aula = Aula;
    }

    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Barra = new javax.swing.JLabel();
        QR_CONTENER = new javax.swing.JLabel();
        Logo = new javax.swing.JLabel();
        Cerrar = new javax.swing.JButton();
        Config = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 51, 51));
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);

        Barra.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BarraMouseDragged(evt);
            }
        });
        Barra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BarraMousePressed(evt);
            }
        });

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/images.png"))); // NOI18N

        Cerrar.setBackground(new java.awt.Color(0, 0, 0));
        Cerrar.setForeground(new java.awt.Color(0, 0, 0));
        Cerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/cross.png"))); // NOI18N
        Cerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CerrarMouseClicked(evt);
            }
        });

        Config.setBackground(new java.awt.Color(0, 0, 0));
        Config.setForeground(new java.awt.Color(0, 0, 0));
        Config.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/settings.png"))); // NOI18N
        Config.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConfigMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Barra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(44, 44, 44)
                .addComponent(Config, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 729, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(QR_CONTENER, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Barra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Cerrar, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(Config, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(QR_CONTENER, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BarraMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BarraMousePressed
        xMouse = evt.getX(); yMouse = evt.getY();
    }//GEN-LAST:event_BarraMousePressed

    private void BarraMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BarraMouseDragged
        int x = evt.getXOnScreen();int y = evt.getYOnScreen();
        this.setLocation(x-xMouse, y-yMouse);
    }//GEN-LAST:event_BarraMouseDragged

    private void CerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CerrarMouseClicked
        System.exit(0);
    }//GEN-LAST:event_CerrarMouseClicked

    private void ConfigMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConfigMouseClicked
         Configuracion config = null;
        try {
            config = new Configuracion();
        } catch (SQLException ex) {
            Logger.getLogger(QR_VIEW.class.getName()).log(Level.SEVERE, null, ex);
        }
         config.setVisible(true);
         config.setLocationRelativeTo(null);
    }//GEN-LAST:event_ConfigMouseClicked
    
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Barra;
    private javax.swing.JButton Cerrar;
    private javax.swing.JButton Config;
    private javax.swing.JLabel Logo;
    private javax.swing.JLabel QR_CONTENER;
    // End of variables declaration//GEN-END:variables
}
